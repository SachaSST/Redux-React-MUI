{"ast":null,"code":"var _jsxFileName = \"/Users/sachasitbon/Developer/Redux-React-MUI/src/components/ArchivedMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Drawer, List, ListItem, ListItemText, IconButton, ListItemSecondaryAction } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport { restoreTodo } from '../features/todos/todosSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchivedMenu = () => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const archivedTodos = useSelector(state => state.todos.archived);\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setOpen(open);\n  };\n  const handleRestore = id => {\n    dispatch(restoreTodo(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      edge: \"start\",\n      color: \"inherit\",\n      \"aria-label\": \"menu\",\n      onClick: toggleDrawer(true),\n      children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"left\",\n      open: open,\n      onClose: toggleDrawer(false),\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: archivedTodos.map(todo => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              onClick: () => handleRestore(todo.id),\n              children: /*#__PURE__*/_jsxDEV(RestoreIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchivedMenu, \"k6/fNYChYtuQXLzpEIiZv6F8YdM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ArchivedMenu;\nexport default ArchivedMenu;\nvar _c;\n$RefreshReg$(_c, \"ArchivedMenu\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Drawer","List","ListItem","ListItemText","IconButton","ListItemSecondaryAction","MenuIcon","RestoreIcon","restoreTodo","jsxDEV","_jsxDEV","ArchivedMenu","_s","open","setOpen","dispatch","archivedTodos","state","todos","archived","toggleDrawer","event","type","key","handleRestore","id","children","edge","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","anchor","onClose","map","todo","button","primary","text","_c","$RefreshReg$"],"sources":["/Users/sachasitbon/Developer/Redux-React-MUI/src/components/ArchivedMenu.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Drawer, List, ListItem, ListItemText, IconButton, ListItemSecondaryAction } from '@mui/material';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport RestoreIcon from '@mui/icons-material/Restore';\nimport { restoreTodo } from '../features/todos/todosSlice';\n\nconst ArchivedMenu = () => {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const archivedTodos = useSelector((state) => state.todos.archived);\n\n  const toggleDrawer = (open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setOpen(open);\n  };\n\n  const handleRestore = (id) => {\n    dispatch(restoreTodo(id));\n  };\n\n  return (\n    <div>\n      <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer(true)}>\n        <MenuIcon />\n      </IconButton>\n      <Drawer anchor=\"left\" open={open} onClose={toggleDrawer(false)}>\n        <List>\n          {archivedTodos.map((todo) => (\n            <ListItem button key={todo.id}>\n              <ListItemText primary={todo.text} />\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" onClick={() => handleRestore(todo.id)}>\n                  <RestoreIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n\nexport default ArchivedMenu;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}